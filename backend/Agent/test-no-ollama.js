import fetch from 'node-fetch';

// Palabras clave para detectar Climatech (copiadas del archivo principal)
const CLIMATECH_KEYWORDS = [
  // Energ√≠as renovables
  'solar', 'e√≥lica', 'hidroel√©ctrica', 'renovable', 'energ√≠a limpia', 'paneles solares',
  'turbinas e√≥licas', 'energ√≠a verde', 'sostenible', 'sustentable',
  
  // Eficiencia energ√©tica
  'eficiencia energ√©tica', 'ahorro energ√©tico', 'consumo energ√©tico', 'optimizaci√≥n',
  'edificios verdes', 'certificaci√≥n energ√©tica',
  
  // Captura de carbono
  'carbono', 'CO2', 'emisiones', 'captura', 'secuestro', 'neutralidad',
  'huella de carbono', 'compensaci√≥n', 'reducci√≥n emisiones',
  
  // Movilidad sostenible
  'veh√≠culo el√©ctrico', 'coche el√©ctrico', 'transporte p√∫blico', 'bicicleta',
  'movilidad sostenible', 'transporte limpio', 'autob√∫s el√©ctrico',
  
  // Agricultura sostenible
  'agricultura sostenible', 'agricultura org√°nica', 'permacultura',
  'agricultura regenerativa', 'cultivo org√°nico',
  
  // Tecnolog√≠as ambientales
  'monitoreo ambiental', 'sensores', 'IoT ambiental', 'tecnolog√≠a verde',
  'innovaci√≥n ambiental', 'tech clim√°tico',
  
  // Pol√≠ticas clim√°ticas
  'cambio clim√°tico', 'pol√≠tica clim√°tica', 'acuerdo de par√≠s', 'COP',
  'regulaci√≥n ambiental', 'normativa verde', 'impuestos verdes',
  
  // Materiales sostenibles
  'materiales sostenibles', 'biodegradable', 'reciclable', 'econom√≠a circular',
  'reutilizaci√≥n', 'sostenibilidad', 'materiales verdes',
  
  // T√©rminos generales
  'clima', 'medio ambiente', 'sostenibilidad', 'verde', 'ecol√≥gico',
  'ambiental', 'sustentable', 'climatech', 'cleantech'
];

// Funci√≥n para generar resumen usando an√°lisis de texto local
function generarResumenLocal(contenido) {
  try {
    console.log(`üìù Generando resumen local...`);
    
    // Dividir en oraciones
    const oraciones = contenido.split(/[.!?]+/).filter(s => s.trim().length > 10);
    
    // Seleccionar las primeras 3 oraciones m√°s relevantes
    const resumen = oraciones.slice(0, 3).join('. ').trim();
    
    console.log(`‚úÖ Resumen generado: ${resumen.length} caracteres`);
    
    return resumen + '.';
  } catch (error) {
    console.error(`‚ùå Error generando resumen: ${error.message}`);
    return 'No se pudo generar el resumen.';
  }
}

// Funci√≥n para determinar si es Climatech usando an√°lisis de palabras clave
function determinarSiEsClimatechLocal(contenido) {
  try {
    console.log(`üîç Evaluando si es Climatech (an√°lisis local)...`);
    
    const contenidoLower = contenido.toLowerCase();
    let puntuacion = 0;
    const palabrasEncontradas = [];
    
    // Contar coincidencias de palabras clave
    CLIMATECH_KEYWORDS.forEach(keyword => {
      if (contenidoLower.includes(keyword.toLowerCase())) {
        puntuacion += 1;
        palabrasEncontradas.push(keyword);
      }
    });
    
    // Calcular densidad de palabras clave
    const densidad = puntuacion / (contenido.split(' ').length / 100); // palabras por 100
    
    const esClimatech = puntuacion >= 3 || densidad >= 2; // Al menos 3 palabras clave o densidad alta
    
    console.log(`‚úÖ Evaluaci√≥n local: ${esClimatech ? 'S√ç es Climatech' : 'NO es Climatech'}`);
    console.log(`üìä Puntuaci√≥n: ${puntuacion} palabras clave encontradas`);
    console.log(`üîç Palabras encontradas: ${palabrasEncontradas.join(', ')}`);
    
    return esClimatech;
  } catch (error) {
    console.error(`‚ùå Error evaluando Climatech: ${error.message}`);
    return false;
  }
}

// Funci√≥n para obtener newsletters de la base de datos
async function obtenerNewslettersBDD() {
  try {
    console.log(`üì• Obteniendo newsletters de la base de datos...`);
    
    const response = await fetch('http://localhost:3000/api/Newsletter');
    if (!response.ok) {
      throw new Error(`Error HTTP: ${response.status} ${response.statusText}`);
    }
    
    const newsletters = await response.json();
    console.log(`‚úÖ Se obtuvieron ${newsletters.length} newsletters de la BDD`);
    console.log('Newsletters disponibles:', newsletters.map(nl => nl.titulo));
    
    return newsletters;
  } catch (error) {
    console.error(`‚ùå Error obteniendo newsletters: ${error.message}`);
    return [];
  }
}

// Funci√≥n para comparar noticia con newsletters usando similitud de texto
function compararConNewslettersLocal(resumenNoticia, newsletters) {
  try {
    console.log(`üîç Comparando noticia con ${newsletters.length} newsletters (an√°lisis local)...`);
    
    if (newsletters.length === 0) {
      console.log(`‚ö†Ô∏è No hay newsletters en la base de datos para comparar`);
      return [];
    }

    const resumenLower = resumenNoticia.toLowerCase();
    const newslettersRelacionados = [];
    
    newsletters.forEach((newsletter, index) => {
      let puntuacion = 0;
      const tituloLower = newsletter.titulo.toLowerCase();
      const resumenNewsletter = (newsletter.Resumen || '').toLowerCase();
      
      // Comparar palabras clave entre el resumen de la noticia y el newsletter
      CLIMATECH_KEYWORDS.forEach(keyword => {
        const keywordLower = keyword.toLowerCase();
        if (resumenLower.includes(keywordLower) && 
            (tituloLower.includes(keywordLower) || resumenNewsletter.includes(keywordLower))) {
          puntuacion += 2; // Coincidencia doble
        } else if (resumenLower.includes(keywordLower) || 
                   tituloLower.includes(keywordLower) || 
                   resumenNewsletter.includes(keywordLower)) {
          puntuacion += 1; // Coincidencia simple
        }
      });
      
      // Si hay al menos 2 coincidencias, considerar relacionado
      if (puntuacion >= 2) {
        newslettersRelacionados.push({
          ...newsletter,
          puntuacion: puntuacion
        });
      }
    });
    
    // Ordenar por puntuaci√≥n y tomar los mejores
    newslettersRelacionados.sort((a, b) => b.puntuacion - a.puntuacion);
    
    console.log(`‚úÖ Se encontraron ${newslettersRelacionados.length} newsletters relacionados`);
    
    return newslettersRelacionados.slice(0, 5); // M√°ximo 5 resultados
  } catch (error) {
    console.error(`‚ùå Error comparando newsletters: ${error.message}`);
    return [];
  }
}

// Funci√≥n para determinar tema principal usando an√°lisis de texto
function determinarTemaPrincipalLocal(contenido) {
  try {
    console.log(`üìã Determinando tema principal (an√°lisis local)...`);
    
    const contenidoLower = contenido.toLowerCase();
    const temas = {
      'tecnolog√≠a': ['tecnolog√≠a', 'tech', 'innovaci√≥n', 'startup', 'app', 'software', 'digital'],
      'deportes': ['f√∫tbol', 'futbol', 'deportes', 'liga', 'equipo', 'jugador', 'partido', 'gol'],
      'pol√≠tica': ['gobierno', 'pol√≠tica', 'elecciones', 'presidente', 'ministro', 'congreso', 'ley'],
      'econom√≠a': ['econom√≠a', 'mercado', 'inversi√≥n', 'bolsa', 'empresa', 'finanzas', 'd√≥lar'],
      'entretenimiento': ['pel√≠cula', 'pelicula', 'm√∫sica', 'musica', 'actor', 'actriz', 'cine', 'teatro'],
      'salud': ['salud', 'm√©dico', 'medico', 'hospital', 'enfermedad', 'tratamiento', 'vacuna'],
      'educaci√≥n': ['educaci√≥n', 'educacion', 'universidad', 'escuela', 'estudiante', 'profesor', 'acad√©mico']
    };
    
    let mejorTema = 'general';
    let mejorPuntuacion = 0;
    
    Object.entries(temas).forEach(([tema, palabras]) => {
      let puntuacion = 0;
      palabras.forEach(palabra => {
        if (contenidoLower.includes(palabra)) {
          puntuacion += 1;
        }
      });
      
      if (puntuacion > mejorPuntuacion) {
        mejorPuntuacion = puntuacion;
        mejorTema = tema;
      }
    });
    
    console.log(`‚úÖ Tema principal detectado: ${mejorTema}`);
    return mejorTema;
  } catch (error) {
    console.error(`‚ùå Error determinando tema: ${error.message}`);
    return 'general';
  }
}

// Test principal
async function testAgenteSinOllama() {
  console.log('üß™ INICIANDO PRUEBA DEL AGENTE (SIN OLLAMA)');
  console.log('=============================================\n');

  // Test 1: Noticia sobre Climatech
  console.log('üì∞ TEST 1: Noticia sobre energ√≠as renovables');
  const noticiaClimatech = `
  Tesla ha anunciado una nueva inversi√≥n de $2.5 mil millones en una planta de bater√≠as solares en Texas. 
  La instalaci√≥n producir√° bater√≠as de litio para veh√≠culos el√©ctricos y sistemas de almacenamiento de energ√≠a renovable. 
  Esta inversi√≥n crear√° 3,000 empleos y ayudar√° a acelerar la transici√≥n hacia energ√≠as limpias en Estados Unidos.
  La empresa tambi√©n implementar√° tecnolog√≠as de eficiencia energ√©tica y reducir√° significativamente la huella de carbono.
  `;

  console.log('Contenido de la noticia:', noticiaClimatech);

  // PASO 1: Determinar si es Climatech
  const esClimatech = determinarSiEsClimatechLocal(noticiaClimatech);
  
  if (esClimatech) {
    // PASO 2: Generar resumen
    const resumen = generarResumenLocal(noticiaClimatech);
    
    // PASO 3: Obtener newsletters de BDD
    const newsletters = await obtenerNewslettersBDD();
    
    // PASO 4: Comparar y encontrar coincidencias
    const newslettersRelacionados = compararConNewslettersLocal(resumen, newsletters);
    
    console.log('\nüìä RESULTADOS DEL TEST 1:');
    console.log('==========================');
    console.log(`‚úÖ Es Climatech: ${esClimatech}`);
    console.log(`üìù Resumen: ${resumen}`);
    console.log(`üìß Newsletters relacionados: ${newslettersRelacionados.length}`);
    newslettersRelacionados.forEach((nl, index) => {
      console.log(`   ${index + 1}. ${nl.titulo} (puntuaci√≥n: ${nl.puntuacion})`);
    });
  } else {
    console.log('\n‚ùå La noticia no fue clasificada como Climatech');
  }

  console.log('\n' + '='.repeat(50));
  
  // Test 2: Noticia NO sobre Climatech
  console.log('\nüì∞ TEST 2: Noticia sobre deportes');
  const noticiaNoClimatech = `
  Lionel Messi ha firmado un nuevo contrato con el Inter Miami por $50 millones anuales. 
  El jugador argentino continuar√° en la MLS por dos temporadas m√°s, con opci√≥n de extensi√≥n. 
  Esta renovaci√≥n confirma su compromiso con el proyecto deportivo del club estadounidense.
  El delantero ha marcado 15 goles en su primera temporada con el equipo.
  `;

  console.log('Contenido de la noticia:', noticiaNoClimatech);

  const esClimatech2 = determinarSiEsClimatechLocal(noticiaNoClimatech);
  const temaPrincipal = determinarTemaPrincipalLocal(noticiaNoClimatech);
  console.log(`\nüìä RESULTADO TEST 2: ${esClimatech2 ? 'S√ç es Climatech' : 'NO es Climatech'}`);
  console.log(`üìã Tema principal: ${temaPrincipal}`);

  console.log('\n‚úÖ PRUEBA COMPLETADA');
  console.log('\nüéØ VENTAJAS DE LA VERSI√ìN SIN OLLAMA:');
  console.log('- ‚ö° Respuesta instant√°nea (sin timeouts)');
  console.log('- üîí No requiere Ollama instalado');
  console.log('- üí∞ Gratis (sin costos de API)');
  console.log('- üõ°Ô∏è Funciona offline');
  console.log('- üìä An√°lisis transparente con puntuaciones');
}

// Ejecutar test
testAgenteSinOllama().catch(console.error);
